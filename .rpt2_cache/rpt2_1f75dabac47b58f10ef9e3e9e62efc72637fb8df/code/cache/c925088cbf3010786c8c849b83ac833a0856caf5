{
  "code": "import JJMgr, { SceneDir } from \"../Common/JJMgr\";\r\nimport JJUtils from \"../Common/JJUtils\";\r\nimport AdMgr from \"../../Mod/AdMgr\";\r\nexport default class FullGameUI extends Laya.Scene {\r\n    constructor() {\r\n        super();\r\n        this.exitBtn = this['exitBtn'];\r\n        this.continueBtn = this['continueBtn'];\r\n        this.navList = this['navList'];\r\n        this.navData = [];\r\n        this.scrollDir = 1;\r\n        this.preIndex = -1;\r\n        this.hotArr = [];\r\n        this.continueCallbackFun = null;\r\n        this.curGrade = -1;\r\n    }\r\n    onOpened(param) {\r\n        if (param && param.continueCallbackFun) {\r\n            this.continueCallbackFun = param.continueCallbackFun;\r\n        }\r\n        if (param && param.grade) {\r\n            this.curGrade = param.grade;\r\n        }\r\n        this._init();\r\n        AdMgr.instance.hideBanner();\r\n    }\r\n    onClosed() {\r\n        Laya.timer.clearAll(this);\r\n    }\r\n    _init() {\r\n        this.exitBtn.on(Laya.Event.CLICK, this, this.closeCB);\r\n        this.continueBtn.on(Laya.Event.CLICK, this, this.continueCB);\r\n        JJUtils.fixNodeY(this.continueBtn);\r\n        JJUtils.visibleDelay(this.continueBtn, JJMgr.instance.dataConfig.front_export_delay);\r\n        this.getHotRandArr();\r\n        this.initList();\r\n    }\r\n    getHotRandArr() {\r\n        let arr = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n        arr = JJUtils.shuffleArr(arr);\r\n        this.hotArr = arr.slice(0, 3);\r\n    }\r\n    initList() {\r\n        this.navData = [].concat(JJMgr.instance.navDataArr);\r\n        this.navList.vScrollBarSkin = '';\r\n        this.navList.repeatX = 3;\r\n        this.navList.repeatY = Math.floor(this.navData.length / 3);\r\n        this.navList.array = this.navData;\r\n        this.navList.height = 1050 * Laya.stage.displayHeight / 1334;\r\n        this.navList.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);\r\n        this.navList.mouseHandler = new Laya.Handler(this, this.mouseHandler);\r\n        Laya.timer.once(1000, this, () => {\r\n            Laya.timer.frameLoop(1, this, this.scrollLoop);\r\n        });\r\n    }\r\n    mouseHandler(e, index) {\r\n        this.againScroll();\r\n    }\r\n    againScroll() {\r\n        Laya.timer.clear(this, this.scrollLoop);\r\n        Laya.timer.once(1000, this, () => {\r\n            Laya.timer.frameLoop(1, this, this.scrollLoop);\r\n        });\r\n    }\r\n    scrollLoop() {\r\n        let scrollBar = this.navList.scrollBar;\r\n        scrollBar.value += this.scrollDir;\r\n        if (scrollBar.value >= scrollBar.max || scrollBar.value <= 0) {\r\n            this.scrollDir = -this.scrollDir;\r\n            this.againScroll();\r\n        }\r\n    }\r\n    onListRender(cell, index) {\r\n        if (index >= this.navList.array.length) {\r\n            return;\r\n        }\r\n        var item = cell.getChildByName('item');\r\n        var icon = item.getChildByName('icon');\r\n        var name = item.getChildByName('name');\r\n        var hot = item.getChildByName('hot');\r\n        var color = item.getChildByName('color');\r\n        color.skin = 'JJExportRes/' + (Math.floor(index % 9) + 1) + '.png';\r\n        icon.skin = this.navData[index].icon;\r\n        name.text = JJMgr.instance.getTitle(this.navData[index].sort - 1);\r\n        hot.visible = this.hotArr.indexOf(index) != -1;\r\n        item.off(Laya.Event.CLICK, this, this.navCB, [this.navData[index].sort - 1]);\r\n        item.on(Laya.Event.CLICK, this, this.navCB, [this.navData[index].sort - 1]);\r\n    }\r\n    navCB(index) {\r\n        console.log('click id:', index);\r\n        JJMgr.instance.NavigateApp(index, null, null, SceneDir.SCENE_FULLGAMEUI);\r\n    }\r\n    closeCB() {\r\n        this.close();\r\n        JJMgr.instance.openScene(SceneDir.SCENE_RECOMMENDUI, false, {\r\n            closeCallbackFun: () => {\r\n                JJMgr.instance.openScene(SceneDir.SCENE_FULLGAMEUI, false, { continueCallbackFun: this.continueCallbackFun });\r\n            }\r\n        });\r\n    }\r\n    continueCB() {\r\n        this.close();\r\n        if (this.curGrade != -1 && this.curGrade - 1 >= JJMgr.instance.dataConfig.front_auto_remen_level) {\r\n            JJMgr.instance.openScene(SceneDir.SCENE_RECOMMENDUI, false, {\r\n                closeCallbackFun: () => {\r\n                    this.continueCallbackFun && this.continueCallbackFun();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.continueCallbackFun && this.continueCallbackFun();\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "E:/LayaProjects/DrawWeapon/src/JJExport/Common/JJMgr.ts",
    "E:/LayaProjects/DrawWeapon/src/JJExport/Common/JJUtils.ts",
    "E:/LayaProjects/DrawWeapon/src/Mod/AdMgr.ts"
  ]
}
