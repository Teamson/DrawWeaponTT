{
  "code": "import WxApi from \"../Libs/WxApi\";\r\nimport Player from \"./Player\";\r\nimport Utility from \"../Mod/Utility\";\r\nimport PlayerDataMgr from \"../Libs/PlayerDataMgr\";\r\nimport GameUI from \"../View/GameUI\";\r\nimport GameTopNode from \"../View/GameTopNode\";\r\nconst LINE_GAP = 0.1;\r\nconst PLAYER_GAP = 3;\r\nconst GRADE_GAP = 10;\r\nexport default class GameLogic {\r\n    constructor() {\r\n        this._playerNode = new Laya.Sprite3D();\r\n        this._aiNode = new Laya.Sprite3D();\r\n        this.canTouch = false;\r\n        this.gradeIndex = 0;\r\n        this.tempPlayerCount = 0;\r\n        localStorage.clear();\r\n        PlayerDataMgr.getPlayerData();\r\n        this.gradeIndex = PlayerDataMgr.getPlayerData().gradeIndex;\r\n        GameLogic.Share = this;\r\n        this.loadAtlas();\r\n    }\r\n    loadAtlas() {\r\n        var resUrl = [\r\n            { url: 'res/atlas/finishUI.atlas', type: Laya.Loader.ATLAS },\r\n            { url: 'res/atlas/finishUI.png', type: Laya.Loader.IMAGE },\r\n            { url: 'res/atlas/mainUI.atlas', type: Laya.Loader.ATLAS },\r\n            { url: 'res/atlas/mainUI.png', type: Laya.Loader.IMAGE },\r\n            { url: 'res/atlas/offlineUI.atlas', type: Laya.Loader.ATLAS },\r\n            { url: 'res/atlas/offlineUI.png', type: Laya.Loader.IMAGE },\r\n        ];\r\n        var fun = function () {\r\n            Laya.Scene.open('MyScenes/LoadingUI.scene');\r\n        };\r\n        Laya.loader.load(resUrl, Laya.Handler.create(this, fun));\r\n    }\r\n    initScene() {\r\n        Laya.Scene3D.load(WxApi.UnityPath + 'MyScene.ls', Laya.Handler.create(this, this.onLoadScene));\r\n    }\r\n    onLoadScene(scene) {\r\n        this._scene = Laya.stage.addChild(scene);\r\n        Laya.stage.setChildIndex(this._scene, 0);\r\n        this._scene.addChild(this._playerNode);\r\n        this._scene.addChild(this._aiNode);\r\n        this._camera = this._scene.getChildByName('Main Camera');\r\n        this._light = this._scene.getChildByName('Directional Light');\r\n        this._plane = this._scene.getChildByName('Plane');\r\n        this.createPlayer();\r\n        this.createAi();\r\n    }\r\n    moveCamera(z, duration = 2000) {\r\n        let cam = this._camera;\r\n        let camPos = cam.transform.position.clone();\r\n        camPos.z += z;\r\n        Utility.TmoveTo(cam, duration, camPos, () => { });\r\n    }\r\n    createPlayer() {\r\n        let playerRes = Laya.loader.getRes(WxApi.UnityPath + 'Hero_1.lh');\r\n        let sx = (PlayerDataMgr.getPlayerCount() + this.tempPlayerCount - 1) * PLAYER_GAP / 2;\r\n        for (let i = 0; i < PlayerDataMgr.getPlayerCount() + this.tempPlayerCount; i++) {\r\n            let player = Laya.Sprite3D.instantiate(playerRes, this._playerNode, false, new Laya.Vector3(0, 0, 0));\r\n            let pCrl = player.addComponent(Player);\r\n            pCrl.initData(i, true);\r\n            player.transform.translate(new Laya.Vector3(sx, 0, GRADE_GAP * this.gradeIndex), false);\r\n            sx -= PLAYER_GAP;\r\n        }\r\n    }\r\n    pushPlayer() {\r\n        let playerRes = Laya.loader.getRes(WxApi.UnityPath + 'Hero_1.lh');\r\n        let sx = (PlayerDataMgr.getPlayerCount() - 1) * PLAYER_GAP / 2;\r\n        for (let i = 0; i < PlayerDataMgr.getPlayerCount(); i++) {\r\n            if (i + 1 <= this._playerNode.numChildren) {\r\n                sx -= PLAYER_GAP;\r\n                continue;\r\n            }\r\n            let player = Laya.Sprite3D.instantiate(playerRes, this._playerNode, false, new Laya.Vector3(0, 0, 0));\r\n            let pCrl = player.addComponent(Player);\r\n            pCrl.initData(i, true);\r\n            player.transform.translate(new Laya.Vector3(sx, 0, GRADE_GAP * this.gradeIndex), false);\r\n            sx -= PLAYER_GAP;\r\n        }\r\n    }\r\n    createAi() {\r\n        this._aiNode.transform.position = new Laya.Vector3(0, 0, 10 + (GRADE_GAP * this.gradeIndex));\r\n        let playerRes = Laya.loader.getRes(WxApi.UnityPath + 'Hero_1.lh');\r\n        let sx = PLAYER_GAP;\r\n        for (let i = 0; i < 3; i++) {\r\n            let player = Laya.Sprite3D.instantiate(playerRes, this._aiNode, true, new Laya.Vector3(0, 0, 0));\r\n            let pCrl = player.addComponent(Player);\r\n            pCrl.initData(i, false);\r\n            player.transform.localPosition.x = sx;\r\n            player.transform.localPosition.y = 0;\r\n            player.transform.localPosition.z = 0;\r\n            player.transform.rotate(new Laya.Vector3(0, 180, 0), true, false);\r\n            sx -= PLAYER_GAP;\r\n            let weaponRes = Laya.loader.getRes(WxApi.UnityPath + 'aiWeapon.lh');\r\n            let weapon = Laya.Sprite3D.instantiate(weaponRes, null, true, new Laya.Vector3(0, 0, 0));\r\n            pCrl.addWeapon(weapon);\r\n        }\r\n    }\r\n    createLine3D(lineArr) {\r\n        let lineNode = new Laya.Sprite3D();\r\n        let lineRes = Laya.loader.getRes(WxApi.UnityPath + 'line.lh');\r\n        let bottomPos = new Laya.Vector3(0, 0, 0);\r\n        for (let i = 0; i < lineArr.length; i++) {\r\n            if (i == 0) {\r\n                let line = Laya.Sprite3D.instantiate(lineRes, lineNode, false, new Laya.Vector3(0, 0, 0));\r\n                line.transform.position = new Laya.Vector3(0, 0, 0);\r\n                bottomPos = line.transform.position.clone();\r\n            }\r\n            else {\r\n                let p1 = new Laya.Vector3(-lineArr[i - 1].x, 0, -lineArr[i - 1].y);\r\n                let p2 = new Laya.Vector3(-lineArr[i].x, 0, -lineArr[i].y);\r\n                let preL = lineNode.getChildAt(lineNode.numChildren - 1);\r\n                let prePos = preL.transform.position.clone();\r\n                let dis = Laya.Vector3.distance(p1, p2);\r\n                for (let j = 0; j < Math.floor(dis / 10); j++) {\r\n                    let line = Laya.Sprite3D.instantiate(lineRes, lineNode, false, new Laya.Vector3(0, 0, 0));\r\n                    let dir = new Laya.Vector3(0, 0, 0);\r\n                    Laya.Vector3.subtract(p2, p1, dir);\r\n                    Laya.Vector3.normalize(dir, dir);\r\n                    let d = (LINE_GAP * (j + 1));\r\n                    dir = new Laya.Vector3(dir.x * d, dir.y * d, dir.z * d);\r\n                    let pos = new Laya.Vector3(0, 0, 0);\r\n                    Laya.Vector3.add(prePos, dir, pos);\r\n                    line.transform.position = pos;\r\n                    if (line.transform.position.z < bottomPos.z) {\r\n                        bottomPos = line.transform.position.clone();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < lineNode.numChildren; i++) {\r\n            let node = lineNode.getChildAt(i);\r\n            let p = new Laya.Vector3(0, 0, 0);\r\n            Laya.Vector3.subtract(node.transform.position, bottomPos, p);\r\n            node.transform.position = p;\r\n        }\r\n        for (let i = 0; i < this._playerNode.numChildren; i++) {\r\n            let pCrl = this._playerNode.getChildAt(i).getComponent(Player);\r\n            if (!pCrl.haveWeapon) {\r\n                pCrl.addWeapon(lineNode);\r\n                break;\r\n            }\r\n        }\r\n        if (this.checkWeaponed()) {\r\n            this.readyGo();\r\n        }\r\n    }\r\n    checkWeaponed() {\r\n        let allWeapon = true;\r\n        for (let i = 0; i < this._playerNode.numChildren; i++) {\r\n            let pCrl = this._playerNode.getChildAt(i).getComponent(Player);\r\n            if (!pCrl.haveWeapon) {\r\n                allWeapon = false;\r\n            }\r\n        }\r\n        return allWeapon;\r\n    }\r\n    readyGo() {\r\n        this.canTouch = false;\r\n        GameUI.Share.visibleBottomUI(false);\r\n        for (let i = 0; i < this._playerNode.numChildren; i++) {\r\n            let pCrl = this._playerNode.getChildAt(i).getComponent(Player);\r\n            pCrl.goToFight(this._aiNode);\r\n        }\r\n        for (let i = 0; i < this._aiNode.numChildren; i++) {\r\n            let pCrl = this._aiNode.getChildAt(i).getComponent(Player);\r\n            pCrl.goToFight(this._playerNode);\r\n        }\r\n        Laya.timer.clear(this, this.checkIsOver);\r\n        Laya.timer.frameLoop(1, this, this.checkIsOver);\r\n    }\r\n    checkIsOver() {\r\n        if (this._aiNode.numChildren <= 0) {\r\n            this.tempPlayerCount = 0;\r\n            this.gradeIndex += 1;\r\n            GameTopNode.Share.initData();\r\n            Laya.timer.clear(this, this.checkIsOver);\r\n            if (this.gradeIndex >= 4) {\r\n                return;\r\n            }\r\n            PlayerDataMgr.getPlayerData().gradeIndex = this.gradeIndex;\r\n            PlayerDataMgr.setPlayerData();\r\n            this.moveCamera(GRADE_GAP);\r\n            let sx = (PlayerDataMgr.getPlayerCount() - 1) * PLAYER_GAP / 2;\r\n            for (let i = 0; i < this._playerNode.numChildren; i++) {\r\n                let player = this._playerNode.getChildAt(i);\r\n                let pCrl = player.getComponent(Player);\r\n                pCrl.fightStarted = false;\r\n                let desPos = new Laya.Vector3(sx - i * PLAYER_GAP, 0, GRADE_GAP * this.gradeIndex);\r\n                Utility.TmoveTo(player, 2000, desPos, () => {\r\n                    pCrl.playIdle2();\r\n                });\r\n                Utility.RotateTo(player, 2000, new Laya.Vector3(0, 0, 0), () => { });\r\n            }\r\n            this.createAi();\r\n            Laya.timer.once(2000, this, () => {\r\n                this.checkIsNeedCreatePlayer();\r\n            });\r\n        }\r\n        if (this._playerNode.numChildren <= 0) {\r\n            this.tempPlayerCount = 0;\r\n            GameUI.Share.visibleGameOverNode(true);\r\n        }\r\n    }\r\n    checkIsNeedCreatePlayer() {\r\n        if (this._playerNode.numChildren < PlayerDataMgr.getPlayerCount()) {\r\n            GameUI.Share.visibleOverNode(true);\r\n        }\r\n        else {\r\n            this.readyGo();\r\n        }\r\n    }\r\n    revivePlayer() {\r\n        this.canTouch = true;\r\n        this.pushPlayer();\r\n    }\r\n    goAhead() {\r\n        this.readyGo();\r\n    }\r\n    restartGame() {\r\n        this._aiNode.destroyChildren();\r\n        this._playerNode.destroyChildren();\r\n        this.createAi();\r\n        this.createPlayer();\r\n        GameUI.Share.visibleBottomUI(true);\r\n        this.canTouch = true;\r\n    }\r\n}\r\nGameLogic.WEAPON_LENGTH_MAX = 100;\r\nGameLogic.WEAPON_LENGTH_MIN = 5;\r\n",
  "references": [
    "E:/LayaProjects/DrawWeapon/src/Libs/WxApi.ts",
    "E:/LayaProjects/DrawWeapon/src/Crl/Player.ts",
    "E:/LayaProjects/DrawWeapon/src/Mod/Utility.ts",
    "E:/LayaProjects/DrawWeapon/src/Libs/PlayerDataMgr.ts",
    "E:/LayaProjects/DrawWeapon/src/View/GameUI.ts",
    "E:/LayaProjects/DrawWeapon/src/View/GameTopNode.ts"
  ]
}
